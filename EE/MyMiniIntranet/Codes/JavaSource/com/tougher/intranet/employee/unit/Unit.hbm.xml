<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN" 
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping
>
    <class
        name="com.tougher.intranet.employee.unit.Unit"
        table="Unit"
    >

        <id
            name="unitCode"
            column="unitCode"
            type="java.lang.Long"
        >
            <generator class="native">
              <!--  
                  To add non XDoclet generator parameters, create a file named 
                  hibernate-generator-params-Unit.xml 
                  containing the additional parameters and place it in your merge dir. 
              --> 
            </generator>
        </id>

        <property
            name="unitName"
            type="java.lang.String"
            update="true"
            insert="true"
            column="unitName"
        />

        <many-to-one
            name="superUnit"
            class="com.tougher.intranet.employee.unit.Unit"
            cascade="none"
            outer-join="auto"
            update="true"
            insert="true"
            column="superUnitCode"
        />

        <set
            name="subUnits"
            lazy="false"
            cascade="save-update"
            sort="com.tougher.intranet.employee.unit.Unit"
        >

            <key
                column="superUnitCode"
            >
            </key>

            <one-to-many
                  class="com.tougher.intranet.employee.unit.Unit"
            />

        </set>

        <!--
            To add non XDoclet property mappings, create a file named
                hibernate-properties-Unit.xml
            containing the additional properties and place it in your merge dir.
        -->

    </class>

        <query name="getUnit"><![CDATA[
            FROM Unit WHERE unitCode=?
        ]]></query>
        <query name="getUnitList"><![CDATA[
            FROM Unit ORDER BY unitName
        ]]></query>
        <query name="getUnitListBySubstring"><![CDATA[
            FROM Unit WHERE unitName LIKE ? ORDER BY unitName
        ]]></query>
        <query name="getUnitListBySubstringCount"><![CDATA[
            SELECT COUNT(*) FROM Unit WHERE unitName LIKE ? ORDER BY unitName
        ]]></query>
        <query name="getUnitListBySuperUnit"><![CDATA[
            FROM Unit u WHERE u.superUnit.unitCode=? ORDER BY unitName
        ]]></query>
        <query name="getUnitListBySuperUnitCount"><![CDATA[
            SELECT COUNT(*) FROM Unit u WHERE u.superUnit.unitCode=? ORDER BY unitName
        ]]></query>
        <query name="getUnitListBySuperUnitNull"><![CDATA[
            FROM Unit u WHERE u.superUnit IS NULL ORDER BY unitName
        ]]></query>
        <query name="getUnitListBySuperUnitNullCount"><![CDATA[
            SELECT COUNT(*) FROM Unit u WHERE u.superUnit IS NULL ORDER BY unitName
        ]]></query>

</hibernate-mapping>
